<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot2 on Fox and the flu</title>
    <link>https://sjfox.github.io/tags/ggplot2/index.xml</link>
    <description>Recent content in Ggplot2 on Fox and the flu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <atom:link href="https://sjfox.github.io/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Visualizing flight data with ggplot2</title>
      <link>https://sjfox.github.io/post/world_map_flights/</link>
      <pubDate>Thu, 11 Jan 2018 15:28:21 -0600</pubDate>
      
      <guid>https://sjfox.github.io/post/world_map_flights/</guid>
      <description>&lt;p&gt;Between travel and finishing up a couple of projects the past two semesters, I wasn’t able to blog as much as I’d like. Rather than jumping straing into research after the holidays, it seemed like a nice time to blog about my favorite figure from the past semester. It was the striking image associated with &lt;a href=&#34;http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005749&#34;&gt;this paper&lt;/a&gt;, though I can’t seem to find a link for it online, so here it is:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://sjfox.github.io/img/striking_image_world_map.png&#34; title=&#34;Hypothetical flu spreading visualization&#34; style=&#34;width:100.0%&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;To start you’re going to need to download the flight and airport data from &lt;a href=&#34;https://openflights.org/data.html&#34;&gt;here&lt;/a&gt;, which is a really amazing sight aggregating flight data and making it available for free!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

airports &amp;lt;- read_csv(&amp;quot;data/flights/airports.csv&amp;quot;, col_names = c(&amp;quot;id&amp;quot;, &amp;quot;name&amp;quot;, 
    &amp;quot;city&amp;quot;, &amp;quot;country&amp;quot;, &amp;quot;iata&amp;quot;, &amp;quot;icao&amp;quot;, &amp;quot;lat&amp;quot;, &amp;quot;long&amp;quot;, &amp;quot;alt&amp;quot;, &amp;quot;tz&amp;quot;, &amp;quot;dst&amp;quot;, &amp;quot;tz2&amp;quot;, 
    &amp;quot;type&amp;quot;, &amp;quot;source&amp;quot;), na = c(&amp;quot;\\N&amp;quot;))
head(airports)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 14
##      id                                        name         city
##   &amp;lt;int&amp;gt;                                       &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;
## 1     1                              Goroka Airport       Goroka
## 2     2                              Madang Airport       Madang
## 3     3                Mount Hagen Kagamuga Airport  Mount Hagen
## 4     4                              Nadzab Airport       Nadzab
## 5     5 Port Moresby Jacksons International Airport Port Moresby
## 6     6                 Wewak International Airport        Wewak
## # ... with 11 more variables: country &amp;lt;chr&amp;gt;, iata &amp;lt;chr&amp;gt;, icao &amp;lt;chr&amp;gt;,
## #   lat &amp;lt;dbl&amp;gt;, long &amp;lt;dbl&amp;gt;, alt &amp;lt;int&amp;gt;, tz &amp;lt;dbl&amp;gt;, dst &amp;lt;chr&amp;gt;, tz2 &amp;lt;chr&amp;gt;,
## #   type &amp;lt;chr&amp;gt;, source &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# flights &amp;lt;- read_csv(&amp;#39;data/airports2/routes.csv&amp;#39;, col_names = c(&amp;#39;airline&amp;#39;,
# &amp;#39;id&amp;#39;, &amp;#39;src_airport&amp;#39;, &amp;#39;src_airport_id&amp;#39;, &amp;#39;dest_airport&amp;#39;, &amp;#39;dest_airport_id&amp;#39;,
# &amp;#39;codeshare&amp;#39;, &amp;#39;stops&amp;#39;, &amp;#39;equip&amp;#39;), na = c(&amp;#39;\\N&amp;#39;)) airports &amp;lt;- airports %&amp;gt;%
# select(id, lat, long) flights %&amp;gt;% select(src_airport_id, dest_airport_id)
# %&amp;gt;% filter(!is.na(src_airport_id) &amp;amp; !is.na(dest_airport_id)) %&amp;gt;%
# left_join(airports, by = c(&amp;#39;src_airport_id&amp;#39; = &amp;#39;id&amp;#39;)) %&amp;gt;%
# rename(src_lat=lat, src_long=long) %&amp;gt;% left_join(airports, by =
# c(&amp;#39;dest_airport_id&amp;#39; = &amp;#39;id&amp;#39;)) %&amp;gt;% rename(dest_lat=lat, dest_long=long) %&amp;gt;%
# filter(src_airport_id != dest_airport_id) %&amp;gt;% mutate(ordered_pair =
# if_else(src_airport_id &amp;gt; dest_airport_id,
# paste0(dest_airport_id,src_airport_id),
# paste0(src_airport_id,dest_airport_id))) %&amp;gt;%
# filter(!duplicated(ordered_pair)) %&amp;gt;% mutate(is_europe = if_else(dest_lat
# &amp;lt; 60 &amp;amp; dest_lat &amp;gt; 25 &amp;amp; src_lat &amp;lt; 60 &amp;amp; src_lat &amp;gt; 10 &amp;amp; dest_long &amp;lt; 50 &amp;amp;
# dest_long &amp;gt; -15 &amp;amp; src_long &amp;lt; 50 &amp;amp; src_long &amp;gt; -15, TRUE,FALSE)) %&amp;gt;%
# filter(!is.na(is_europe)) -&amp;gt; all_flights data &amp;lt;- map_data(&amp;#39;world&amp;#39;) plot_bg
# &amp;lt;- data %&amp;gt;% filter(`region` != &amp;#39;Antarctica&amp;#39;) %&amp;gt;% ggplot(aes(long, lat,
# group = group)) + geom_polygon(fill=&amp;#39;black&amp;#39;, color = &amp;#39;black&amp;#39;, size=0.1) +
# theme_void() + theme(plot.background=element_rect(fill=&amp;#39;black&amp;#39;)) world_map
# &amp;lt;- plot_bg + geom_polygon(fill=&amp;#39;black&amp;#39;, color = &amp;#39;white&amp;#39;, size=0.15)
# only_curves &amp;lt;- plot_bg + geom_curve(data = all_flights, aes(x = src_long,
# xend = dest_long, y = src_lat, yend = dest_lat, size=is_europe,
# alpha=is_europe), color = &amp;#39;white&amp;#39;, inherit.aes = FALSE) +
# scale_size_manual(values = c(0.05, 0.01) ) + scale_alpha_manual(values =
# c(0.25, 0.25) ) + theme(legend.position=&amp;#39;none&amp;#39;,
# plot.background=element_rect(fill=&amp;#39;black&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>