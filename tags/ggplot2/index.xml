<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot2 on Fox and the flu</title>
    <link>https://sjfox.github.io/tags/ggplot2/index.xml</link>
    <description>Recent content in Ggplot2 on Fox and the flu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <atom:link href="https://sjfox.github.io/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Visualizing flight data with ggplot2</title>
      <link>https://sjfox.github.io/post/world_map_flights/</link>
      <pubDate>Thu, 11 Jan 2018 15:28:21 -0600</pubDate>
      
      <guid>https://sjfox.github.io/post/world_map_flights/</guid>
      <description>&lt;p&gt;Between travel and finishing up a couple of projects the past two semesters, I wasn’t able to blog as much as I’d like. Rather than jumping straing into research after the holidays, it seemed like a nice time to blog about my favorite figure from the past semester. It was the striking image associated with &lt;a href=&#34;http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005749&#34;&gt;this paper&lt;/a&gt;, though I can’t seem to find a link for it online, so here it is:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://sjfox.github.io/img/striking_image_world_map.png&#34; title=&#34;Hypothetical flu spreading visualization&#34; style=&#34;width:100.0%&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;To start go &lt;a href=&#34;https://openflights.org/data.html&#34;&gt;here&lt;/a&gt;, to download an amazing open flight and airport dataset. Then you can read in the airport and flights data, and do some munging to get them in a clean format. For the specific files I used for this visualization see &lt;a href=&#34;https://github.com/sjfox/sjfox.github.io/tree/master/post/data/flights&#34;&gt;this folder&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

airports &amp;lt;- read_csv(&amp;quot;data/flights/airports.csv&amp;quot;, 
                     col_names = c(&amp;quot;id&amp;quot;, &amp;quot;name&amp;quot;, &amp;quot;city&amp;quot;, &amp;quot;country&amp;quot;, &amp;quot;iata&amp;quot;, &amp;quot;icao&amp;quot;, &amp;quot;lat&amp;quot;, &amp;quot;long&amp;quot;,
                                   &amp;quot;alt&amp;quot;, &amp;quot;tz&amp;quot;, &amp;quot;dst&amp;quot;, &amp;quot;tz2&amp;quot;, &amp;quot;type&amp;quot;, &amp;quot;source&amp;quot;), na = c(&amp;quot;\\N&amp;quot;))
flights &amp;lt;- read_csv(&amp;quot;data/flights/routes.csv&amp;quot;,
                    col_names = c(&amp;quot;airline&amp;quot;, &amp;quot;id&amp;quot;, &amp;quot;src_airport&amp;quot;, &amp;quot;src_airport_id&amp;quot;, &amp;quot;dest_airport&amp;quot;,
                                  &amp;quot;dest_airport_id&amp;quot;, &amp;quot;codeshare&amp;quot;, &amp;quot;stops&amp;quot;, &amp;quot;equip&amp;quot;), na = c(&amp;quot;\\N&amp;quot;))

airports &amp;lt;- airports %&amp;gt;% select(id, lat, long)
flights &amp;lt;- flights %&amp;gt;% select(src_airport_id, dest_airport_id) %&amp;gt;%
              filter(!is.na(src_airport_id) &amp;amp; !is.na(dest_airport_id))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So you can see now that &lt;code&gt;airports&lt;/code&gt; now holds a database of airport locations with a unique identifier, and &lt;code&gt;flights&lt;/code&gt; holds a database of flights from the year, with the unique identified for the source and destination airports.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(airports)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##      id   lat  long
##   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 -6.08  145.
## 2     2 -5.21  146.
## 3     3 -5.83  144.
## 4     4 -6.57  147.
## 5     5 -9.44  147.
## 6     6 -3.58  144.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(flights)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 2
##   src_airport_id dest_airport_id
##            &amp;lt;int&amp;gt;           &amp;lt;int&amp;gt;
## 1           2965            2990
## 2           2966            2990
## 3           2966            2962
## 4           2968            2990
## 5           2968            4078
## 6           4029            2990&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This next part is the hard part. We need to combine and clean the two datasets. To begin we do two joins, because we need the lat and long data for both the source and the destination airports. After that I create a new column that captures the source and destination airports, remove duplicates, and create a variable to loosely capture the flights to and from Europe (You’ll see why at the end).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;clean_flights &amp;lt;- flights %&amp;gt;%  
  left_join(airports, by = c(&amp;quot;src_airport_id&amp;quot; = &amp;quot;id&amp;quot;)) %&amp;gt;%  
  rename(src_lat=lat, src_long=long) %&amp;gt;%  
  left_join(airports, by = c(&amp;quot;dest_airport_id&amp;quot; = &amp;quot;id&amp;quot;)) %&amp;gt;%  
  rename(dest_lat=lat, dest_long=long)  %&amp;gt;%  
  filter(src_airport_id != dest_airport_id)  %&amp;gt;%
  mutate(ordered_pair = if_else(src_airport_id &amp;gt; dest_airport_id,
                                paste0(dest_airport_id,src_airport_id),
                                paste0(src_airport_id,dest_airport_id))) %&amp;gt;%
  filter(!duplicated(ordered_pair)) %&amp;gt;%
  mutate(is_europe = if_else(dest_lat &amp;lt; 60 &amp;amp; dest_lat &amp;gt; 25 &amp;amp; src_lat &amp;lt; 60 &amp;amp; src_lat &amp;gt; 10 &amp;amp;
                             dest_long &amp;lt; 50 &amp;amp; dest_long &amp;gt; -15 &amp;amp; src_long &amp;lt; 50 &amp;amp; src_long &amp;gt; -15, TRUE,FALSE)) %&amp;gt;%
  filter(!is.na(is_europe))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you have that, you’re basically done! Let’s see what these flights looks like now! I couldn’t believe how well &lt;code&gt;geom_curve()&lt;/code&gt; did exactly what I wanted it to do.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- map_data(&amp;quot;world&amp;quot;)

data %&amp;gt;% filter(`region` != &amp;quot;Antarctica&amp;quot;) %&amp;gt;%
  ggplot(aes(long, lat, group = group)) +
    geom_polygon(fill=&amp;quot;black&amp;quot;, color = &amp;quot;white&amp;quot;, size=0.15) +
    geom_curve(data = clean_flights, aes(x = src_long, xend = dest_long,
                                         y = src_lat,  yend = dest_lat), 
                                         alpha=0.25, size=0.05,
                                         color = &amp;quot;white&amp;quot;, inherit.aes = FALSE) +
    theme_void() +
    theme(plot.background=element_rect(fill=&amp;quot;black&amp;quot;), legend.position=&amp;quot;none&amp;quot;) +
    coord_equal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://sjfox.github.io/post/world_map_flights_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As you can see it’s pretty difficult to see European countries, so here’s the map if we change the size of the european flights, which I think looks nicer.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data %&amp;gt;% filter(`region` != &amp;quot;Antarctica&amp;quot;) %&amp;gt;%
  ggplot(aes(long, lat, group = group)) +
    geom_polygon(fill=&amp;quot;black&amp;quot;, color = &amp;quot;white&amp;quot;, size=0.15) +
    geom_curve(data = clean_flights, aes(x = src_long, xend = dest_long,
                                         y = src_lat,  yend = dest_lat,
                                         size=is_europe), alpha=0.25,
                                         color = &amp;quot;white&amp;quot;, inherit.aes = FALSE) +
    scale_size_manual(values = c(0.05, 0.01) ) +
    theme_void() +
    theme(plot.background=element_rect(fill=&amp;quot;black&amp;quot;), legend.position=&amp;quot;none&amp;quot;) +
    coord_equal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://sjfox.github.io/post/world_map_flights_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;After that, I brought the image into inkscape, and added in the fake “flu spreading circles” with a lot of help from the maestro, &lt;a href=&#34;https://eannechambers.wordpress.com/&#34;&gt;Anne Chambers&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>