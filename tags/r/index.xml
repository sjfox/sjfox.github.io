<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Fox and the flu</title>
    <link>https://sjfox.github.io/tags/r/index.xml</link>
    <description>Recent content in R on Fox and the flu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <atom:link href="https://sjfox.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Visualizing flight data with ggplot2</title>
      <link>https://sjfox.github.io/post/world_map_flights/</link>
      <pubDate>Thu, 11 Jan 2018 15:28:21 -0600</pubDate>
      
      <guid>https://sjfox.github.io/post/world_map_flights/</guid>
      <description>&lt;p&gt;Between travel and finishing up a couple of projects the past two semesters, I wasn’t able to blog as much as I’d like. Rather than jumping straing into research after the holidays, it seemed like a nice time to blog about my favorite figure from the past semester. It was the striking image associated with &lt;a href=&#34;http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005749&#34;&gt;this paper&lt;/a&gt;, though I can’t seem to find a link for it online, so here it is:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;embed src=&#34;static/striking_image_world_map.pdf&#34; title=&#34;Hypothetical flu spreading visualization&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;alt text&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Data from: https://openflights.org/data.html
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading tidyverse: ggplot2
## Loading tidyverse: tibble
## Loading tidyverse: tidyr
## Loading tidyverse: readr
## Loading tidyverse: purrr
## Loading tidyverse: dplyr&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Conflicts with tidy packages ----------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## filter(): dplyr, stats
## lag():    dplyr, stats&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;airports &amp;lt;- read_csv(&amp;quot;data/flights/airports.csv&amp;quot;, 
                     col_names = c(&amp;quot;id&amp;quot;, &amp;quot;name&amp;quot;, &amp;quot;city&amp;quot;, &amp;quot;country&amp;quot;, &amp;quot;iata&amp;quot;, &amp;quot;icao&amp;quot;, &amp;quot;lat&amp;quot;, &amp;quot;long&amp;quot;,
                                   &amp;quot;alt&amp;quot;, &amp;quot;tz&amp;quot;, &amp;quot;dst&amp;quot;, &amp;quot;tz2&amp;quot;, &amp;quot;type&amp;quot;, &amp;quot;source&amp;quot;), na = c(&amp;quot;\\N&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   id = col_integer(),
##   name = col_character(),
##   city = col_character(),
##   country = col_character(),
##   iata = col_character(),
##   icao = col_character(),
##   lat = col_double(),
##   long = col_double(),
##   alt = col_integer(),
##   tz = col_double(),
##   dst = col_character(),
##   tz2 = col_character(),
##   type = col_character(),
##   source = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in rbind(names(probs), probs_f): number of columns of result is not
## a multiple of vector length (arg 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: 12 parsing failures.
## row # A tibble: 5 x 5 col     row   col           expected actual                        file expected   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;              &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;                       &amp;lt;chr&amp;gt; actual 1   329  name delimiter or quote      C &amp;#39;data/flights/airports.csv&amp;#39; file 2   329  name delimiter or quote        &amp;#39;data/flights/airports.csv&amp;#39; row 3   666  name delimiter or quote      S &amp;#39;data/flights/airports.csv&amp;#39; col 4   666  name delimiter or quote        &amp;#39;data/flights/airports.csv&amp;#39; expected 5  1310  name delimiter or quote      M &amp;#39;data/flights/airports.csv&amp;#39;

## See problems(...) for more details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(airports)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 14
##      id                                        name         city
##   &amp;lt;int&amp;gt;                                       &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;
## 1     1                              Goroka Airport       Goroka
## 2     2                              Madang Airport       Madang
## 3     3                Mount Hagen Kagamuga Airport  Mount Hagen
## 4     4                              Nadzab Airport       Nadzab
## 5     5 Port Moresby Jacksons International Airport Port Moresby
## 6     6                 Wewak International Airport        Wewak
## # ... with 11 more variables: country &amp;lt;chr&amp;gt;, iata &amp;lt;chr&amp;gt;, icao &amp;lt;chr&amp;gt;,
## #   lat &amp;lt;dbl&amp;gt;, long &amp;lt;dbl&amp;gt;, alt &amp;lt;int&amp;gt;, tz &amp;lt;dbl&amp;gt;, dst &amp;lt;chr&amp;gt;, tz2 &amp;lt;chr&amp;gt;,
## #   type &amp;lt;chr&amp;gt;, source &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# flights &amp;lt;- read_csv(&amp;quot;data/airports2/routes.csv&amp;quot;, 
#                     col_names = c(&amp;quot;airline&amp;quot;, &amp;quot;id&amp;quot;, &amp;quot;src_airport&amp;quot;, &amp;quot;src_airport_id&amp;quot;, &amp;quot;dest_airport&amp;quot;,
#                                   &amp;quot;dest_airport_id&amp;quot;, &amp;quot;codeshare&amp;quot;, &amp;quot;stops&amp;quot;, &amp;quot;equip&amp;quot;), na = c(&amp;quot;\\N&amp;quot;))
# 
# airports &amp;lt;- airports %&amp;gt;% select(id, lat, long)
# 
# flights %&amp;gt;% select(src_airport_id, dest_airport_id) %&amp;gt;%
#   filter(!is.na(src_airport_id) &amp;amp; !is.na(dest_airport_id)) %&amp;gt;%
#   left_join(airports, by = c(&amp;quot;src_airport_id&amp;quot; = &amp;quot;id&amp;quot;)) %&amp;gt;%
#   rename(src_lat=lat, src_long=long) %&amp;gt;%
#   left_join(airports, by = c(&amp;quot;dest_airport_id&amp;quot; = &amp;quot;id&amp;quot;)) %&amp;gt;%
#   rename(dest_lat=lat, dest_long=long)  %&amp;gt;%
#   filter(src_airport_id != dest_airport_id) %&amp;gt;%
#   mutate(ordered_pair = if_else(src_airport_id &amp;gt; dest_airport_id, 
#                                 paste0(dest_airport_id,src_airport_id),
#                                 paste0(src_airport_id,dest_airport_id))) %&amp;gt;%
#   filter(!duplicated(ordered_pair)) %&amp;gt;%
#   mutate(is_europe = if_else(dest_lat &amp;lt; 60 &amp;amp; dest_lat &amp;gt; 25 &amp;amp; src_lat &amp;lt; 60 &amp;amp; src_lat &amp;gt; 10 &amp;amp; 
#                              dest_long &amp;lt; 50 &amp;amp; dest_long &amp;gt; -15 &amp;amp; src_long &amp;lt; 50 &amp;amp; src_long &amp;gt; -15, TRUE,FALSE)) %&amp;gt;%
# filter(!is.na(is_europe)) -&amp;gt; all_flights
#   
# 
# data &amp;lt;- map_data(&amp;quot;world&amp;quot;) 
# 
# plot_bg &amp;lt;- data %&amp;gt;% filter(`region` != &amp;quot;Antarctica&amp;quot;) %&amp;gt;% 
#   ggplot(aes(long, lat, group = group)) + 
#   geom_polygon(fill=&amp;quot;black&amp;quot;, color = &amp;quot;black&amp;quot;, size=0.1) + 
#   theme_void() + theme(plot.background=element_rect(fill=&amp;quot;black&amp;quot;))
# 
# world_map &amp;lt;- plot_bg + 
#   geom_polygon(fill=&amp;quot;black&amp;quot;, color = &amp;quot;white&amp;quot;, size=0.15) 
# 
# only_curves &amp;lt;- plot_bg +
#   geom_curve(data = all_flights, aes(x = src_long, xend = dest_long, 
#                                      y = src_lat, yend = dest_lat, 
#                                      size=is_europe, alpha=is_europe), 
#                                      color = &amp;quot;white&amp;quot;, inherit.aes = FALSE) +
#   scale_size_manual(values = c(0.05, 0.01) ) +
#   scale_alpha_manual(values = c(0.25, 0.25) ) +
#   theme(legend.position=&amp;quot;none&amp;quot;, plot.background=element_rect(fill=&amp;quot;black&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>